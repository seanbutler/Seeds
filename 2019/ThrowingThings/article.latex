\textbf{DOCUMENT PLAN}

\textbf{Introduction} - Thesis/Statement - Quick view of both sides

\textbf{Discussion} - Metaphorical Discussion of Perlin Noise -
Discussion on range of approaches from Pragmatic to Authentic

ISS Crew Earth Observations experiment and the Image Science \& Analysis
Group, Johnson Space Center. {[}Public domain{]}, via Wikimedia Commons

\textbf{Tutorial \& Decisions}

\begin{itemize}
\tightlist
\item
  \textbf{Placement of Islands}

  \begin{itemize}
  \tightlist
  \item
    Hot spots
  \item
    Divergent plate boundaries (such as rifts and mid-ocean ridges), and
  \item
    Convergent plate boundaries (subduction zones)
  \end{itemize}
\item
  \textbf{Creation of New Landscape}

  \begin{itemize}
  \tightlist
  \item
    Erupted Materials
  \item
    Deposition
  \end{itemize}
\end{itemize}

\textbf{Results}

\textbf{Discussion}

\textbf{Conclusion}

\begin{center}\rule{0.5\linewidth}{\linethickness}\end{center}

\hypertarget{throwing-things}{%
\section{Throwing Things}\label{throwing-things}}

\textbf{I don't like perlin noise.}

There I said it. Gosh I feel better already! This improved feeling did
perhaps come at the risk of committing procedural blasphemy*.

Perlin noise is usually thought of as a source of information to feed
into landscape algorithms. Another way to consider it is as a
manipulation of one kind of noise from a random source into another kind
of noise with a bit more structure. This translation happens by seeding
the combination of multiple waveforms together into a single artefact
with significantly different scales. In particular it translates the
(white?, gaussian?) input noise into a soft of repeatable waveform.

its value comes because it generates an output with a, repeating but
never quite the same, form we like.

One of the most valuable aspect of the algorithm's output is that the
variations in the data all of a similar scale. This similar scale effect
allows us to use the output data as source for rolling hills or islands
or other features which should all be different, but also a similar
scale.

Of special use to procedural developers is that we can influence that
form.

\begin{itemize}
\tightlist
\item
  Perlin Noise
\item
  Simplex noise
\item
  Value Noise
\end{itemize}

Of course everyone acknowledges Perlin Noise is incredibly useful. A
multilayered, scaled, randomised waveform can be put to use in many
ways. Clouds, Waves, Mountains, Islands etc.

A very common application of Perlin Noise is of course to make
landscapes, particularly oceanic landscapes.

\begin{itemize}
\tightlist
\item
  Shamus Young,
\item
  Marcus `Notch' Perssun,
\item
  Others Etc
\end{itemize}

In its normal form, the landscapes do have a characteristic shape, most
developers provide an additional manipulation to create the geographic
structures we enjoy.

\includegraphics{https://commons.wikimedia.org/wiki/File:Perlin_noise.jpg}

\hypertarget{artistry-and-authenticity}{%
\subsection{Artistry and Authenticity}\label{artistry-and-authenticity}}

\includegraphics{https://upload.wikimedia.org/wikipedia/commons/4/4a/MtCleveland_ISS013-E-24184.jpg}

ISS Crew Earth Observations experiment and the Image Science \& Analysis
Group, Johnson Space Center. {[}Public domain{]}, via Wikimedia Commons

Removing the primary physical aspect of a gameplay challenge in making
it a simulation based challenge means the space often needs to be
amplified for fun to occur, consider the tracks of SSX in comparison
with your own experience of skiing, perhaps. Authentic Artefacts often
don't make for great video game gameplay.

In authentic artefacts can remind the player they are in a simulation
which might not be what you as a designer want. Normalisation,
conventions and suspension of disbelief go some way to ameliorate this.

At one end we have arbitrary algorithms and heuristics which generate
forms useful in a variety of domains.

At the other end we can have simulations whose internal factors
accurately and mathematically replicate the internal states and dynamics
of the system found in reality whose aspects we find valuable for our
game.

Recently a student I supervised built a system to generate levels for a
real-time strategy game. Along with a variety of other techniques, They
used a cellular automata to distribute the placement of trees within
little forests across the map. While inspired by biology the
mathematical features of the cellular automata have little or nothing in
common with the systems of pressures on tree populations in the
countryside.

Consider Chris Ofili's use of elephant dung, one could argue that the
exact shades he needs for the frame supports and other round features in
the images could more easily and cheaply be produced with other
materials. Conversely reflect on Damien Hurst's spot paintings, some of
which are shipped to their buyer as a series of pots of paint and
instructions. Hurst himself states the best spot painting to be had was
painted by an assistant. So from the perspective of the artist, and art
market the necessity for authenticity is a movable requirement.

Academic or scientific approaches to procedural generation of sand dunes
often has the goal of generating natural shaped landscapes.

\hypertarget{tutorial}{%
\section{Tutorial}\label{tutorial}}

\hypertarget{results}{%
\section{Results}\label{results}}

\includegraphics{assets/island1c.png}

\includegraphics{assets/Untitled.png}

In each case the islands generated show convex and concave features
around their edges, this is in keeping with authentic natural
landscapes, and depending on scale and designer goals could be
instrumental in achor detracting from gameplay goals.

The algorithm demonstrated is primarily for the generation of shape, so
as such the islands arent rendered with specialist shaders including
waters edge, greenery, rock and snow.

\hypertarget{discussion}{%
\section{Discussion}\label{discussion}}

Aesthetics of visuals and space in games is different from that in the
traditional visual arts. As game developers we must balance the goals of
the visual form against the goals of the gameplay form.

In big studio production this is often done by having white/orange
boxing and by having gameplay collision mesh built in parallel with the
gameplay design and tested against that gameplay as a separate process
from the (later) art generation.

In procedural generation the management of this dual nature has to be
handled differently. Lots of current procedural generation seems to
closely tie or consider identical the visuals and gameplay space.

\hypertarget{conclusion}{%
\section{Conclusion}\label{conclusion}}

\begin{center}\rule{0.5\linewidth}{\linethickness}\end{center}

\begin{itemize}
\tightlist
\item
  A better kind of procedural blasphemy might be an `electric sinner'.
  Use logic and NLP to codify the core rule set from a religious text.
  Build a machine to break those rules (in thought, by visualising them,
  then perhaps automatically tweeting the images, by communication by
  inciting others to commit sin and finally in action, would need a
  robot for this one). Is it possible to carry out any of these
  activities without actually committing a sin oneself? I suppose we
  could consider it educational or somewhat like a morality play. (some
  might say that video games are already doing this)
\end{itemize}

\begin{center}\rule{0.5\linewidth}{\linethickness}\end{center}

Meteor Storm Escape was acted as a MVP prototype for a desert dune
racing game.
\includegraphics{assets/MeteorStorm_Screengrab01_2012_04_10.png}
